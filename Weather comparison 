import requests
import datetime

# Replace with your actual API key.  OpenWeatherMap is a common choice.
API_KEY = "YOUR_OPENWEATHERMAP_API_KEY"  

def get_weather_data(city, api_key):
    """Fetches weather data for a given city for the next 7 days."""
    url = f"http://api.openweathermap.org/data/2.5/forecast?q={city}&appid={api_key}&units=metric"  # Use metric or imperial
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        daily_data = {}
        for item in data['list']:
            timestamp = item['dt']
            date = datetime.datetime.fromtimestamp(timestamp).strftime('%Y-%m-%d')
            if date not in daily_data:  # Get only one reading per day (e.g., midday)
                daily_data[date] = {
                    'temperature': item['main']['temp'],
                    'description': item['weather']['description'],
                    'humidity': item['main']['humidity'],
                    'wind_speed': item['wind']['speed']
                }
        return daily_data
    else:
        print(f"Error fetching data for {city}: {response.status_code}")
        return None



def compare_weather(city1, city2, api_key):
    """Compares the weather for two cities for the next 7 days."""

    weather_city1 = get_weather_data(city1, api_key)
    weather_city2 = get_weather_data(city2, api_key)

    if weather_city1 is None or weather_city2 is None:
        return  # Exit if there's an error fetching data

    dates = sorted(list(set(weather_city1.keys()) & set(weather_city2.keys())))  # Common dates

    print(f"Weather Comparison: {city1} vs {city2} (Next 7 Days)")
    print("-" * 50)  # Separator line

    for date in dates:
        print(f"Date: {date}")
        print(f"{city1}:")
        print(f"  Temperature: {weather_city1[date]['temperature']}°C")
        print(f"  Description: {weather_city1[date]['description']}")
        print(f"  Humidity: {weather_city1[date]['humidity']}%")
        print(f"  Wind Speed: {weather_city1[date]['wind_speed']} m/s")

        print(f"{city2}:")
        print(f"  Temperature: {weather_city2[date]['temperature']}°C")
        print(f"  Description: {weather_city2[date]['description']}")
        print(f"  Humidity: {weather_city2[date]['humidity']}%")
        print(f"  Wind Speed: {weather_city2[date]['wind_speed']} m/s")
        print("-" * 20) # Smaller separator between days



# Example usage:
city1 = "London"  # Replace with the first city
city2 = "Paris"  # Replace with the second city

compare_weather(city1, city2, API_KEY)



